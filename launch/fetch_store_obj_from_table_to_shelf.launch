<launch>

  <arg name="camera" value="head_camera"/>
  <arg name="gui" default="true"/>

  <arg name="FIXED_FRAME" value="base_link"/>
  <arg name="NODELET_MANAGER" value="sample_manager"/>

  <node name="$(arg NODELET_MANAGER)"
        pkg="nodelet" type="nodelet" args="manager"/>

  <!-- Run openni2.launch on localhost -->
  <node name="republish_rgb"
        pkg="image_transport" type="republish"
        args="compressed raw">
    <remap from="in" to="/$(arg camera)/rgb/image_raw"/>
    <remap from="out" to="/$(arg camera)_local/rgb/image_raw"/>
  </node>

  <node name="republish_depth"
        pkg="image_transport" type="republish"
        args="compressedDepth raw">
    <remap from="in" to="/$(arg camera)/depth/image_raw"/>
    <remap from="out" to="/$(arg camera)_local/depth/image_raw"/>
  </node>

  <include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="load_driver" value="false"/>
    <arg name="camera" value="$(arg camera)_local"/>
    <arg name="depth_registration" value="true"/>
    <arg name="publish_tf" value="false"/>
  </include>

  <!-- Main Process -->
  <node name="multi_plane_estimate"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/OrganizedMultiPlaneSegmentation $(arg NODELET_MANAGER)"
        output="screen">
    <remap from="~input" to="/$(arg camera)_local/depth_registered/points"/>
    <rosparam>
      max_curvature: 0.01
      estimate_normal: true
    </rosparam>
  </node>

  <node name="cluster_indices_decomposer_table"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg NODELET_MANAGER)"
        output="screen">
    <remap from="~input" to="/$(arg camera)_local/depth_registered/points"/>
    <remap from="~target" to="multi_plane_estimate/output"/>
    <rosparam>
      approximate_sync: true
      queue_size: 1000
    </rosparam>
  </node>

  <node name="extract_indices_table"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ExtractIndices $(arg NODELET_MANAGER)"
        output="screen">
    <remap from="~input" to="/$(arg camera)_local/depth_registered/points" />
    <remap from="~indices" to="cluster_indices_decomposer_table/negative_indices" />
    <rosparam>
      approximate_sync: true
      queue_size: 100
      keep_organized: true
    </rosparam>
  </node>

  <node name="euclidean_clustering"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/EuclideanClustering $(arg NODELET_MANAGER)"
        output="screen">
    <remap from="~input" to="extract_indices_table/output" />
    <rosparam>
      min_size: 100
      max_size: 10000
      tolerance: 0.05
    </rosparam>
  </node>

  <node name="cluster_indices_decomposer_target"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg NODELET_MANAGER)"
        output="screen">
    <remap from="~input" to="extract_indices_table/output" />
    <remap from="~target" to="euclidean_clustering/output" />
    <rosparam subst_value="true">
      approximate_sync: false
      queue_size: 100
      sort_by: -cloud_size
      align_boxes: true
      align_boxes_with_plane: false
      use_pca: true
      target_frame_id: $(arg FIXED_FRAME)
    </rosparam>
  </node>

  <node name="store_objects_from_table_to_shelf"
        pkg="housework_support" type="fetch-store-objects-from-table-to-shelf.l"
        args="&quot;(main)&quot;"
        output="screen">
    <rosparam>
      fixed_frame: $(arg FIXED_FRAME)
    </rosparam>
  </node>

  <!-- Visualization -->
  <group if="$(arg gui)">
    <node name="rviz"
          pkg="rviz" type="rviz"
          args="-d $(find housework_support)/rvizconfig/fetch_store_obj_from_table_to_shelf.rviz"/>
  </group>

</launch>
