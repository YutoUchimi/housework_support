<launch>

  <!-- Arguments -->
  <arg name="FIXED_FRAME" default="base_link"/>
  <arg name="launch_manager" default="true"/>
  <arg name="manager" default="pr2_pick_object_manager"/>
  <arg name="show_irtviewer" default="true"/>
  <arg name="rviz" default="true"/>

  <group if="$(arg launch_manager)">
    <node name="$(arg manager)"
          pkg="nodelet" type="nodelet"
          args="manager"
          respawn="true" output="screen"/>
  </group>

  <!-- PointCloudMirrorFlipper with mirror_segmentation_depth_estimation -->
  <include file="$(find mirror_recognition)/launch/point_cloud_mirror_flipper_by_pr2_kinect.launch">
    <arg name="rviz" value="true" unless="$(arg rviz)"/>
    <arg name="rviz" value="false" if="$(arg rviz)"/>
    <arg name="launch_manager" value="true" unless="$(arg launch_manager)"/>
    <arg name="launch_manager" value="false" if="$(arg launch_manager)"/>
    <arg name="manager" value="$(arg manager)"/>
  </include>

  <!-- Crop table region -->
  <node name="transformable_interactive_server"
        pkg="jsk_interactive_marker" type="transformable_server_sample">
    <rosparam subst_value="true">
      display_interactive_manipulator: true
      display_interactive_manipulator_only_selected: true
      display_description_only_selected: true
    </rosparam>
  </node>

  <node name="transformable_table_markers"
        pkg="jsk_interactive_marker" type="transformable_markers_client.py">
    <remap from="~server" to="transformable_interactive_server" />
    <rosparam subst_value="true">
      config_file: $(find housework_support)/config/table_marker.yaml
      config_auto_save: true
    </rosparam>
  </node>

  <node name="bbox_array_to_bbox"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/BoundingBoxArrayToBoundingBox $(arg manager)"
        respawn="true" output="screen">
    <remap from="~input" to="/transformable_table_markers/output/boxes"/>
    <rosparam>
      index: 0
    </rosparam>
  </node>

  <node name="attention_clipper_table"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/AttentionClipper $(arg manager)"
        respawn="true" output="screen">
    <remap from="~input" to="kinect_head_remote/rgb/camera_info"/>
    <remap from="~input/points" to="kinect_head_remote/depth_registered/points"/>
    <remap from="~input/box" to="bbox_array_to_bbox/output"/>
    <rosparam subst_value="true">
      use_multiple_attention: false
    </rosparam>
  </node>

  <node name="extract_indices_table"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ExtractIndices $(arg manager)"
        respawn="true"
        output="screen">
    <remap from="~input" to="kinect_head_remote/depth_registered/points"/>
    <remap from="~indices" to="attention_clipper_table/output/point_indices"/>
    <rosparam>
      keep_organized: true
      approximate_sync: true
      max_queue_size: 100
    </rosparam>
  </node>

  <!-- Remove table plane -->
  <node name="multi_plane_estimate"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/OrganizedMultiPlaneSegmentation $(arg manager)"
        respawn="true"
        output="screen">
    <remap from="~input" to="extract_indices_table/output"/>
    <rosparam>
      max_curvature: 0.01
      min_size: 5000
      estimate_normal: true
    </rosparam>
  </node>

  <node name="cluster_indices_decomposer_table"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg manager)"
        respawn="true"
        output="screen">
    <remap from="~input" to="extract_indices_table/output"/>
    <remap from="~target" to="multi_plane_estimate/output"/>
    <rosparam>
      approximate_sync: true
      queue_size: 1000
    </rosparam>
  </node>

  <node name="extract_indices_table_negative"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ExtractIndices $(arg manager)"
        respawn="true"
        output="screen">
    <remap from="~input" to="extract_indices_table/output" />
    <remap from="~indices" to="cluster_indices_decomposer_table/negative_indices" />
    <rosparam>
      approximate_sync: true
      queue_size: 100
      keep_organized: true
    </rosparam>
  </node>

  <!-- Get target bounding box -->
  <node name="euclidean_clustering"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/EuclideanClustering $(arg manager)"
        respawn="true"
        output="screen">
    <remap from="~input" to="extract_indices_table_negative/output" />
    <rosparam>
      min_size: 100
      max_size: 10000
      tolerance: 0.05
    </rosparam>
  </node>

  <node name="cluster_indices_decomposer_target"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg manager)"
        respawn="true"
        output="screen">
    <remap from="~input" to="extract_indices_table_negative/output" />
    <remap from="~target" to="euclidean_clustering/output" />
    <rosparam subst_value="true">
      approximate_sync: false
      queue_size: 100
      sort_by: -cloud_size
      align_boxes: true
      align_boxes_with_plane: false
      use_pca: true
      target_frame_id: $(arg FIXED_FRAME)
    </rosparam>
  </node>

  <!-- Trigger to start picking and stowing -->
  <node name="rqt_yn_btn"
        pkg="jsk_rqt_plugins" type="rqt_yn_btn">
    <remap from="~" to="rviz/yes_no_button"/>
  </node>

  <!-- publish tf: map -> base_link -->
  <node name="tf_to_transform_map_to_base_link"
        pkg="jsk_topic_tools" type="tf_to_transform.py">
    <rosparam>
      parent_frame_id: map
      child_frame_id: base_link
      duration: 1
      rate: 10
    </rosparam>
  </node>

  <!-- Motion -->
  <node name="pr2_pick_object"
        pkg="housework_support" type="pr2-pick-object.l"
        args="&quot;(main)&quot;"
        respawn="true" output="screen">
    <remap from="~bboxes" to="cluster_indices_decomposer_target/boxes"/>
    <remap from="~centroid_poses" to="cluster_indices_decomposer_target/centroid_pose_array"/>
    <remap from="~start_trigger" to="rviz/yes_no_button"/>
    <remap from="~tf_map_to_base" to="tf_to_transform_map_to_base_link/output"/>
    <rosparam subst_value="true">
      fixed_frame: $(arg FIXED_FRAME)
      show_irtviewer: $(arg show_irtviewer)
    </rosparam>
  </node>

  <!-- Visualization -->
  <group if="$(arg rviz)">
    <node name="rviz"
          pkg="rviz" type="rviz"
          args="-d $(find housework_support)/rvizconfig/pr2_pick_object.rviz"/>
  </group>

</launch>
